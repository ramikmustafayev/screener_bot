import os
import html
from aiogram import Router
from aiogram.types import Message,FSInputFile
from aiogram.filters import Command
from services.sql_queries import execute_query_to_pdf
from database.repo.requests import RequestsRepo
from database.repo.sql_presets import SQLPresetsRepo


sql_preset_router=Router()






@sql_preset_router.message(Command("add_preset"))
async def add_preset(message: Message, repo: RequestsRepo, user):
    try:
        text = message.text.removeprefix("/add_preset").strip()
        if ":" not in text:
            await message.answer("–§–æ—Ä–º–∞—Ç: –Ω–∞–∑–≤–∞–Ω–∏–µ : SQL-–∑–∞–ø—Ä–æ—Å")
            return
        
        name, query = map(str.strip, text.split(":", 1))

        sql_repo: SQLPresetsRepo = repo.sql_presets

        await sql_repo.add(name=name, query=query, user_id=user.id)

        await message.answer(f"‚úÖ –ü—Ä–µ—Å–µ—Ç '{name}' –¥–æ–±–∞–≤–ª–µ–Ω!")
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –ø—Ä–µ—Å–µ—Ç–∞: {e}")


@sql_preset_router.message(Command("delete_preset"))
async def delete_preset(message: Message, repo: RequestsRepo, user):
    try:
        id = message.text.removeprefix("/delete_preset").strip()
        if not id:
            await message.answer("–§–æ—Ä–º–∞—Ç: /delete_preset Id –ø—Ä–µ—Å–µ—Ç–∞")
            return

    

        sql_repo: SQLPresetsRepo = repo.sql_presets

        row_count=await sql_repo.delete({'id':int(id),'user_id':user.id})


        if row_count == 0:
            await message.answer(f"‚ùå –ü—Ä–µ—Å–µ—Ç c Id '{id}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        else:
            await message.answer(f"‚úÖ –ü—Ä–µ—Å–µ—Ç c Id '{id}' —É–¥–∞–ª—ë–Ω.")

  
    except Exception as e:
        await message.answer(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø—Ä–µ—Å–µ—Ç–∞: {e}")



@sql_preset_router.message(Command("list_presets"))
async def list_presets(message: Message, repo:RequestsRepo,user):
    presets_repo=repo.sql_presets

    presets=await presets_repo.get_all(user_id=user.id)

    if not presets:
        await message.answer("‚ö†Ô∏è –ü—Ä–µ—Å–µ—Ç—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.")
        return

    text = "üìÑ –°–ø–∏—Å–æ–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤:\n\n"
    for preset in presets:
        text += f"‚Ä¢ Id:{preset.id} name:{preset.name}\n"

    await message.answer(text)



@sql_preset_router.message(Command("run_preset"))
async def handle_sql_query(message: Message,repo:RequestsRepo,user,session):
    id = message.text.removeprefix("/run_preset").strip()
    if not id:
        await message.answer("–§–æ—Ä–º–∞—Ç: /run_preset Id –ø—Ä–µ—Å–µ—Ç–∞")
        return
    
    presets_repo=repo.sql_presets

    preset=await presets_repo.get_one_or_none(user_id=user.id,id=int(id))

 
    pdf_path = await execute_query_to_pdf(message,session, preset.query)
    if pdf_path == "NO_ROWS":
        await message.answer("–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ. –°—Ç—Ä–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ—Ç.")
    elif pdf_path=='EMPTY':
        await message.answer("–ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ, –Ω–∏—á–µ–≥–æ –Ω–µ –≤–µ—Ä–Ω—É–ª")
    elif pdf_path:
        await message.answer_document(FSInputFile(pdf_path, filename="result.pdf"))
        os.remove(pdf_path)
   


@sql_preset_router.message(Command("get_preset"))
async def get_preset(message: Message,repo,user):
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    id = message.text.removeprefix("/get_preset").strip()

    if not id:
        await message.answer("–§–æ—Ä–º–∞—Ç: /run_preset Id –ø—Ä–µ—Å–µ—Ç–∞")
        return
    
    presets_repo=repo.sql_presets

    preset=await presets_repo.get_one_or_none(user_id=user.id,id=int(id))

    if preset:
        query = html.escape(preset.query) 
        # –ï—Å–ª–∏ –Ω–∞—à–ª–∏ –ø—Ä–µ—Å–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        await message.answer(
    f"–ó–∞–ø—Ä–æ—Å –¥–ª—è –ø—Ä–µ—Å–µ—Ç–∞ —Å Id '{id}':\n\n<pre>{query}</pre>",
    parse_mode='HTML'
)
    else:
        # –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏, —É–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        await message.answer(f"–ü—Ä–µ—Å–µ—Ç —Å  '{id}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")
